openapi: 3.0.3
info:
  title: Swagger PBL7 - OpenAPI 3.0
  description: ''
  contact:
    email: ldhuydn1305@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:9090/api/v1
tags:
  - name: account
  - name: user
  - name: role
  - name: proof
  - name: district
  - name: ward
  - name: transaction
  - name: committee
  - name: approval
paths:
  /login:
    post:
      tags:
        - account
      summary: ''
      description: ''
      operationId: loginUser
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 200
                  Data:
                    type: object
                  Message:
                    type: string
                  DataErrors :
                    type: object
              examples:
                Success:
                  summary: Successful
                  value:
                    Code: 200
                    Data:
                      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTVkMjNkYmJiYTlhMDAwOGE4MTIzMCIsImlhdCI6MTcxMzAwMjkyMCwiZXhwIjoxNzEzODY2OTIwfQ.DV7wFnZrk6qTYXLw4rAosU9CmwVlWzb17aL86R-RYhg
                      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTVkMjNkYmJiYTlhMDAwOGE4MTIzMCIsImlhdCI6MTcxMzAwMjkyMCwiZXhwIjoxNzEzODY2OTIwfQ.DV7wFnZrk6qTYXLw4rAosU9CmwVlWzb17aL86R-RYhg
                      timeout: 18000
                    Message: ""
                    DataErrors: {}
                Bad request:
                  $ref: '#/components/examples/bad_request'
                Not authentication:
                  $ref: '#/components/examples/not_auth'
                Not access:
                  $ref: '#/components/examples/not_access'
                Data invalid:
                  $ref: '#/components/examples/data_invalid'
                Exception:
                  $ref: '#/components/examples/exception'
  /forgot-password:
    post:
      tags:
        - account
      summary: ''
      description: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
              format: email
              example: 'bongmaxuyentuong1@gmail.com'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 200
                  Data:
                    type: object
  /change-password:
    post:
      tags:
        - account
      summary: ''
      description: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: 'bongmaxuyentuong1@gmail.com'
                password:
                  type: string
                  example: '123123'
                passwordConfirm:
                  type: string
                  example: '123123'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 200
                  Data:
                    type: object
                  Message:
                    type: string
                  DataErrors :
                    type: object
              examples:
                Success:
                  summary: Successful
                  value:
                    Code: 200
                    Data: {}
                    Message: "OK"
                    DataErrors: {}
                Bad request:
                  $ref: '#/components/examples/bad_request'
                Not authentication:
                  $ref: '#/components/examples/not_auth'
                Not access:
                  $ref: '#/components/examples/not_access'
                Data invalid:
                  $ref: '#/components/examples/data_invalid'
                Exception:
                  $ref: '#/components/examples/exception'
  /account:
    post:
      tags:
        - user
      summary: Create Account
      description: ''
      operationId: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 200
                  Data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example :  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTVkMjNkYmJiYTlhMDAwOGE4MTIzMCIsImlhdCI6MTcxMzAwMjkyMCwiZXhwIjoxNzEzODY2OTIwfQ.DV7wFnZrk6qTYXLw4rAosU9CmwVlWzb17aL86R-RYhg
                      refresh_token:
                        type: string
                        example :  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTVkMjNkYmJiYTlhMDAwOGE4MTIzMCIsImlhdCI6MTcxMzAwMjkyMCwiZXhwIjoxNzEzODY2OTIwfQ.DV7wFnZrk6qTYXLw4rAosU9CmwVlWzb17aL86R-RYhg
                      timeout: 
                        type: string
                        example: 18000
  /proof:
    post:
      tags:
        - proof
      summary: ''
      description: ''
      operationId: ''
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 200
                  Data:
                    type: object
                    properties:
                      image:
                        type: string
                        example :  https://res.cloudinary.com/dcyg1qwdc/image/upload/v1711419867/cld-sample-2.jpg
components:
  schemas:
    role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    account:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
        role_id:
          type: integer
    user:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    proof:
      type: object
      properties:
        image:
          type: string
  examples:
    'bad_request':
      value:
        Code: 400
        Data: {}
        Message: Bad request
        DataErrors: {}
    'not_auth':
      value:
        Code: 401
        Data: {}
        Message: Not authenticated
        DataErrors: {}
    'not_access':
      value:
        Code: 403
        Data: {}
        Message: Forbidden access
        DataErrors: {}
    'data_invalid':
      value:
        Code: 422
        Data: {}
        Message: Validation error
        DataErrors: {
          "email" : "email is error"
        }
    'exception':
      value:
        Code: 500
        Data: {}
        Message: Server error
        DataErrors: {
          Instance: ErrorException,
          Line: 37,
          File: account.js,
          Code: 0,
          Message: "Undefined mail"
        }
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT